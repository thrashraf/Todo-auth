{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Diploma\\\\Krenovator-TSA\\\\auth\\\\auth-client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { react, useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport { Layout } from './Layout/Layout';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { SignUp } from './pages/SignUp';\nimport { Profile } from './pages/Profile';\nimport { Admin } from './pages/Admin';\nimport { EditUser } from './pages/EditUser';\nimport { Todos } from './pages/Todos';\nimport { userContext } from './userContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:5000/user', {\n      withCredentials: true\n    }).then(res => {\n      console.log(res);\n      setData(res.data);\n    });\n  }, []);\n\n  let route = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(SignUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this),\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this); // if (data) {\n  //   route = (\n  //     <Routes>\n  //       <Route path=\"/\" element={ <Home/> } exact />\n  //       <Route path=\"/login\" element={ <Login/> }/>\n  //       <Route path=\"/signup\" element={ <SignUp/> } />\n  //       <Route path=\"/profile\" element={ <Profile/> } />\n  //     </Routes>\n  //     )\n  //     if (data.isAdmin) {\n  //       route = (\n  //       <Routes>\n  //         <Route path=\"/\" element={ <Home/> } exact />\n  //         <Route path=\"/login\" element={ <Login/> }/>\n  //         <Route path=\"/signup\" element={ <SignUp/> } />\n  //         <Route path=\"/profile\" element={ <Profile/> } />\n  //         <Route path=\"/admin\" element={ <Admin/> } />\n  //         <Route path=\"/admin/edituser\" element={ <EditUser/> } />\n  //         <Route path=\"/todos\" element={ <Todos/> } />\n  //       </Routes>\n  //       )\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(userContext.Provider, {\n    value: {\n      data,\n      setData\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"h-full\",\n      children: route\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Diploma/Krenovator-TSA/auth/auth-client/src/App.js"],"names":["react","useState","useEffect","Route","Routes","Layout","Home","Login","SignUp","Profile","Admin","EditUser","Todos","userContext","axios","App","data","setData","get","withCredentials","then","res","console","log","route"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,kBAA7B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,QAAT,QAAwB,kBAAxB;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEdY,IAAAA,KAAK,CAACI,GAAN,CAAU,4BAAV,EAAwC;AAACC,MAAAA,eAAe,EAAE;AAAlB,KAAxC,EACCC,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,MAAAA,OAAO,CAACI,GAAG,CAACL,IAAL,CAAP;AACD,KAJD;AAKD,GAPQ,EAON,EAPM,CAAT;;AASA,MAAIQ,KAAK,gBAEP;AAAA,4BACK,QAAC,MAAD;AAAA,8BACH,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADG,eAEH,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,OAAO,eAAG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YADL,eAMA,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACA,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,kBAA1B;AAAoC,UAAA,KAAK;AAAzC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAba,CAgCb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAACR,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAA7B;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,gBACGO;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAjEQT,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import { react, useState, useEffect } from 'react';\nimport { Route, Routes} from 'react-router-dom';\nimport { Layout } from './Layout/Layout';\nimport { Home } from './pages/Home';\nimport { Login } from './pages/Login';\nimport { SignUp } from './pages/SignUp';\nimport { Profile } from './pages/Profile';\nimport { Admin } from './pages/Admin';\nimport { EditUser} from './pages/EditUser';\nimport { Todos } from './pages/Todos';\nimport { userContext } from './userContext';\nimport axios from 'axios';\n\nfunction App() {\n\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    \n    axios.get('http://localhost:5000/user', {withCredentials: true})\n    .then(res => {\n      console.log(res)\n      setData(res.data)\n    })\n  }, [])\n\n  let route = (\n\n    <div>\n         <Routes>\n      <Route path=\"/login\" element={ <Login/> }/>\n      <Route path=\"/signup\" element={ <SignUp/> } />\n    </Routes>\n\n    <Layout>\n      <Routes>\n      <Route path=\"/\" element={ <Home/> } exact />\n      </Routes>\n    </Layout>\n    </div>\n\n   \n    \n  )\n\n  // if (data) {\n\n  //   route = (\n  //     <Routes>\n  //       <Route path=\"/\" element={ <Home/> } exact />\n  //       <Route path=\"/login\" element={ <Login/> }/>\n  //       <Route path=\"/signup\" element={ <SignUp/> } />\n  //       <Route path=\"/profile\" element={ <Profile/> } />\n  //     </Routes>\n  //     )\n\n  //     if (data.isAdmin) {\n  //       route = (\n  //       <Routes>\n  //         <Route path=\"/\" element={ <Home/> } exact />\n  //         <Route path=\"/login\" element={ <Login/> }/>\n  //         <Route path=\"/signup\" element={ <SignUp/> } />\n  //         <Route path=\"/profile\" element={ <Profile/> } />\n  //         <Route path=\"/admin\" element={ <Admin/> } />\n  //         <Route path=\"/admin/edituser\" element={ <EditUser/> } />\n  //         <Route path=\"/todos\" element={ <Todos/> } />\n  //       </Routes>\n  //       )\n  //     }\n  // }\n\n  return (\n    <userContext.Provider value={{data, setData}}>\n      <div className=\"h-full\">\n        {route}\n      </div>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}